################################
######### TRIGO BLANDO ######### 
################################
# Script para encontrar genes e informacion sobre ellos en regiones de interes de TRIGO BLANDO

#Cargar librerias
library(readxl)
library(dplyr)
library(stringr)
library(tidyverse)
library(datos)

##Cargar archivos
#Poner aqui la ruta del directorio donde esta el archivo con las regiones de interes y las anotaciones de los genomas
setwd("C:/Users/Elia/Desktop/genetica/anotaciones/TB")
#Input del user - regiones sobre las que queremos extraer informacion
# de momento pruebo con este pero deberia probar cuanto antes la de los traits de interes que hemos sacado de las variables ecoclimaticas
#INPUT <- read_delim("invervalos_raw_Bonferroni.txt") #lo cargo manualmente porque no lo esta leyendo bien no se por que y ahora lo renombro
INPUT <- intervalos_raw_Bonferroni
INPUT <- select(INPUT, c(1,2,3,4))
names(INPUT) <- c("Name", "Chr", "Start", "End" )
#poner las letras del cromosoma en minuscula para que no haya problema entre las de un arcivo y otro
for (ch in 1:nrow(INPUT)){
  INPUT$Chr[ch] <- tolower(INPUT$Chr[ch])
}

#cargar el genoma de trigo blando (previamente limpio en el script donde juntaba el gend e la version mas actualizada y la funcion que hay en la primera version)
TRITB <- read.delim("v2.1_funciones_merged.txt")
#poner las letras del cromosoma en minuscula para que no haya problema entre las de un arcivo y otro
for (ch in 1:nrow(TRITB)){
  # le voy a quitar la parte de chr porque en este caso, el nombre de los cromosomas que me devuelve TASSEL no tiene la parte de chr
  TRITB$Chr[ch] <- tolower(substr(TRITB$Chr[ch], 4, 5))
}

#Funcion para definir el comienzo y el final de la region genomica
#Input: principio y final de la region de interes y el genoma donde va a encontrar la region
set_limits <- function(start.input, end.input, anotation){
  # seleccionar la parte del genoma en los que los finales sean mayores que el comienzo de la region de interes
  subanotation <- anotation[anotation$End >= start.input ,]
  # de ese subgenoma seleccionamos ahora  la parte en la que los comienzos sean menores que el final de la region de interes
  subanotation <- subanotation[subanotation$Start <= end.input ,]
  return(subanotation)
}

#crear directorio para almacenar los resultados
date = as.character(Sys.Date())
dir.create(paste("results_TB", date))
setwd(paste0(getwd(), paste("/results_TB", date)))

info_total <- data.frame(Chr = as.character(), Secuencia =as.character(), Region.start = as.character(), Region.end= as.character(), num.genes= as.character(), Info = as.character())
for (ch in unique(INPUT$Chr)){ # recorrer el input cromosoma a cromosoma
  # empezar un archivo por cromosoma para escribir toda la informacion
  #subset del input y del genoma cromosoma por cromosoma
  INPUT_ch = INPUT[INPUT$Chr == ch ,]
  TRITB_ch = TRITB[TRITB$Chr == ch ,]
  #Recorrer el subset del cromosoma para:
  ## 1. encontrar el principio y el final de cada region genomica donde esta cada secuencia de interes y filtrar cada subgenoma para quedarme solo con esa region
  ## 2. sacar la informacion (numero de genes, id y note de cada gen dentro de esa region)
  for (i in 1:nrow(INPUT_ch)){
    subgenome <- set_limits(INPUT_ch$Start[i], INPUT_ch$End[i], TRITB_ch)
    for (r in 1:nrow(subgenome)){
      new_row <- data.frame(ch, INPUT_ch$Name[i], min(subgenome$Start), max(subgenome$End), nrow(subgenome), subgenome$Info)
      names(new_row) <- c("Chr", "Secuencia", "Region.start", "Region.end", "num.genes", "Info")
      info_total <- rbind(info_total, new_row)
    }
  }
}
# no se por que el bucle escribe la informacion repetida - tengo que quedarme solo con 1 linea por gen
info_total <- info_total %>% group_by(Info) %>% slice(1)
#exportar a un archivo llamado summary_TB
write.table(info_total, file= "total_TB.txt" ,sep="\t")

## escribir info_summary solo con el ID y el note del gen 
info_summary <- info_total
for (i in 1:nrow(info_summary)){
  splitted <- str_split(info_summary$Info[i], ";")
  id <- splitted[[1]][1]
  note <- splitted[[1]][3]
  new_info <- str_c(id, note, sep = ";")
  info_summary$Info[i] <- new_info
}
write.table(info_summary, file= "summary_TB.txt" ,sep="\t")
