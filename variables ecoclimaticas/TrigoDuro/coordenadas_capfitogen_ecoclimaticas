### Script para crear un pasaporte para sacar variables ecoclimaticas con CAPFITOGEN3
## El input tiene que ser una tabla del estilo de la de "Passaporte" de trigo blando
## Como output se genera un .txt listo para sacar las variables ecoclimaticas con CAPFITOGEN3

#Cargamos librerias
# Para preparar el pasaporte.txt
library(readxl)
library(xlsx)
library(readr)
# Para hacer el PCA
library(stats)
library(FactoMineR)
library(factoextra)
library(corrplot)
# Para modificar data frames
library(dplyr)

#PART 1 - ECOGEO CAPFITOGEN 
# Establecemos el working directory en el que estamos trabajando.
#Tener en cuenta que todos los archivos que carguemos tienen que estar en este directorio
#Si los archivos que vamos a coger ya estan en este directorio no hace falta el setwd
setwd("C:/Users/Elia/Desktop/genetica/coordenadas y variables ecoclimaticas/CAPFITOGEN3/analisis/TD")
# Cargar datos de pasaporte 
#Passaporte <- read_excel("CoordCNTD.xlsx")
Passaporte <- CoordCNTD
#Eliminar filas que tengan valores nulos en las coordenadas
names(Passaporte) <- c("ID", "Specie", "Province", "LATITU", "LONGIT", "ALTITU")
Passaporte <- Passaporte[!is.na(Passaporte$LATITU),]
Passaporte <- Passaporte[!is.na(Passaporte$LONGIT),]

##PASAMOS LAS COORDENADAS A FORMATO DECIMAL PARA UTILIZAR ECOGEO
# Creamos un vector nuevo en el que almacenar los nuevos valores de longitud sin el 0 que tiene al principio que le sobra
new_longitud <- c()
#Quitar el 0 que le sobra al principio a los valores de longitud
for (long in Passaporte$LONGIT){
  if (nchar(long) > 7){
    new_longitud = c(new_longitud,substr(long,2,8))
  }
}
# Sustituir la columna de longitud del data set por la nueva sin el 0 que le sobraba al principio
if (length(new_longitud) > 0){
  Passaporte$LONGIT <- new_longitud
}

#Pasar las coordenadas de DMS tal y como las tenemos ahora a formato decimal para la herramienta ECOGEO de CAPFITOGEN
#En longitud
## Creamos un vector en el que almacenar los datos de longitud en formato decimal
dec_long = c()
##Sustituimos los guiones por 0 para poder calcular el valor
Passaporte$LONGIT = gsub('-','0',Passaporte$LONGIT)
for (long in Passaporte$LONGIT){
  #Me aseguro de que en las columnas de longitud y latitud no hay ningun valor con menos o mas de 7 caracteres
  if (nchar(long) > 7){
    print("Longitud con mas de 7 caracteres: ",long)
  }
  if (nchar(long) < 7){
    print("Longitud con menos de 7 caracteres: ",long)
  }
  #Los grados son los dos primeros digitos, los minutos los 2 segundos y los segundos los 2 ultimos
  deg = as.numeric(substr(long,1,2))
  min = as.numeric(substr(long,3,4))
  seg = as.numeric(substr(long,5,6))
  #Hago el calculo para pasar a formato decimal y dejo 5 decimales en el numero
  decimal = round(deg + (min/60)+ (seg/3600), 5)
  if (substr(long,7,7) == "W"){
    decimal = decimal*(-1)
  }
  #Lo almaceno en el vector
  dec_long = c(dec_long, decimal)
}

# En latitud
## Creamos un vector en el que almacenar los datos de longitud en formato decimal
dec_lat = c()
##Sustituimos los guiones por 0 para poder calcular el valor
Passaporte$LATITU = gsub('-','0',Passaporte$LATITU)
for (lat in Passaporte$LATITU){
  #Me aseguro de que en las columnas de longitud y latitud no hay ningun valor con menos o mas de 7 caracteres
  if (nchar(lat) > 7){
    print("Longitud con mas de 7 caracteres: ",lat)
  }
  if (nchar(lat) < 7){
    print("Longitud con menos de 7 caracteres: ",lat)
  }
  #Los grados son los dos primeros digitos, los minutos los 2 segundos y los segundos los 2 ultimos
  deg = as.numeric(substr(lat,1,2))
  min = as.numeric(substr(lat,3,4))
  seg = as.numeric(substr(lat,5,6))
  #Hago el calculo para pasar a formato decimal y dejo 5 decimales en el numero
  decimal = round(deg + (min/60)+ (seg/3600), 5)
  if (substr(lat,7,7) == "S"){
    decimal = decimal*(-1)
  }
  #Lo almaceno en el vector
  dec_lat = c(dec_lat, decimal)
}

# Ahora vamos a generar el pasaporte que necesitamos para utilizar la herramienta ECOGEO de CAPFITOGEN
# Vamos a ir creando columna por columna de la manera en que lo requiere el programa
INSTCODE = c()
for(code in Passaporte$ID){
  INSTCODE = c(INSTCODE, substr(code,1,3))
}
ACCENUMB = c()
for(accenumb in Passaporte$ID){
  ACCENUMB = c(ACCENUMB, substr(accenumb,5,7))
}
COLLNUMB <- c(rep(NA, nrow(Passaporte)))
COLLCODE <- c(rep(NA, nrow(Passaporte)))
COLLNAME <- c(rep(NA, nrow(Passaporte)))
COLLINSTADDRESS <- c(rep(NA, nrow(Passaporte)))
COLLMISSID <- c(rep(NA, nrow(Passaporte)))
GENUS <- c(rep("Triticum", nrow(Passaporte)))
SPECIES <- c(rep(NA, nrow(Passaporte)))
SPAUTHOR <- c(rep(NA, nrow(Passaporte)))
SUBTAXA <- c(rep(NA, nrow(Passaporte)))
SUBTAUTHOR <- c(rep(NA, nrow(Passaporte)))
CROPNAME <- c(rep("wheat", nrow(Passaporte)))
ACCENAME <- c(rep(NA, nrow(Passaporte)))
ACQDATE <- c(rep(NA, nrow(Passaporte)))
ORIGCTY <- c(rep("ESP", nrow(Passaporte)))
NAMECTY <- c(rep(NA, nrow(Passaporte)))
ADM1 <- c(rep(NA, nrow(Passaporte)))
ADM2 <- Passaporte$Province
ADM3 <- c(rep(NA, nrow(Passaporte)))
ADM4 <- c(rep(NA, nrow(Passaporte)))
COLLSITE <- c(rep(NA, nrow(Passaporte)))
DECLATITUDE <- dec_lat
LATITUDE <- Passaporte$LATITU
DECLONGITUDE <- dec_long
LONGITUDE <- Passaporte$LONGIT
COORDUNCERT <- c(rep(NA, nrow(Passaporte)))
COORDDATUM <- c(rep(NA, nrow(Passaporte)))
GEOREFMETH <- c(rep(NA, nrow(Passaporte)))
ELEVATION <- Passaporte$ALTITU
COLLDATE <- c(rep(NA, nrow(Passaporte)))
BREDCODE <- c(rep(NA, nrow(Passaporte)))
BREDNAME <- c(rep(NA, nrow(Passaporte)))
SAMPSTAT <- c(rep(NA, nrow(Passaporte)))#300?
ANCEST <- c(rep(NA, nrow(Passaporte)))
COLLSRC <- c(rep(NA, nrow(Passaporte)))#20?
DONORCODE <- c(rep(NA, nrow(Passaporte)))
DONORNAME <- c(rep(NA, nrow(Passaporte)))
DONORNUMB <- c(rep(NA, nrow(Passaporte)))
OTHERNUMB <- c(rep(NA, nrow(Passaporte)))
DUPLSITE <- c(rep(NA, nrow(Passaporte)))
DUPLINSTNAME <- c(rep(NA, nrow(Passaporte)))
STORAGE <- c(rep(NA, nrow(Passaporte)))
MLSSTAT	 <- c(rep(NA, nrow(Passaporte)))
REMARKS <- c(rep(NA, nrow(Passaporte)))

df_pasaporte <- data.frame(INSTCODE,ACCENUMB,COLLNUMB,COLLCODE,COLLNAME,COLLINSTADDRESS,COLLMISSID,GENUS,SPECIES,SPAUTHOR,SUBTAXA,SUBTAUTHOR,CROPNAME,	
                           ACCENAME,ACQDATE,ORIGCTY,NAMECTY,ADM1,ADM2,ADM3,ADM4,COLLSITE,DECLATITUDE,
                           LATITUDE,DECLONGITUDE,LONGITUDE,COORDUNCERT,COORDDATUM,GEOREFMETH,ELEVATION,
                           COLLDATE,BREDCODE,BREDNAME,SAMPSTAT,ANCEST,COLLSRC,DONORCODE,DONORNAME,DONORNUMB,	
                           OTHERNUMB,DUPLSITE,DUPLINSTNAME,STORAGE,MLSSTAT,REMARKS)

# !!!!!! IMPORTANTE !!!!!!
# Exportamos el data frame en .txt directamente a la carpeta pasaporte donde esta instalado el programa
#Importante poner esa ruta del ordenador en el que se esta usando CAPFITOGEN
#Si se genera en cualquier otra carpeta, copiar el archivo y pegarlo en la carpeta pasaporte de capfitogen
write_delim(df_pasaporte, "C:/Users/Elia/CAPFITOGEN3/Pasaporte/data.txt", delim = "\t")





## PART 2- ANALISIS PCA
#Cargamos la tabla de variables ecogeograficas
tabla_variables <- read.delim("C:/Users/Elia/Desktop/genetica/coordenadas y variables ecoclimaticas/CAPFITOGEN3/analisis/TD/results/EcogeographicCharacterization_Spain/TablaVarEcogeograficasspain.txt")
#A?adimos la columna de population 
tabla_variables$POP = Passaporte$POP
#Seleccionar las 75 variables ecoclimaticas para los analisis y para lanzar el TASSEL
variables_ecoclimaticas <- tabla_variables[, 5:78]

#Analisis PCA
##PCA DE INDIVIDUOS - coloreado por poblacion
fviz_pca_ind( prcomp(variables_ecoclimaticas,  scale = TRUE), 
              geom = "point",
              habillage = tabla_variables$POP,
              addEllipses = FALSE, 
              #ellipse.type = "convex",
              col.ind = rep("black",nrow(tabla_variables))
)
#PCA DE VARIABLES - coloreado por contribucion a las variables
pca_variables <- PCA(variables_ecoclimaticas, scale.unit=TRUE, ncp = 3, graph=FALSE)
fviz_pca_ind(pca_variables, col.var = "black")
var <- print(pca_variables$var)

#contributions of variables to PCs
variables_names <- names(variables_ecoclimaticas)
contribution <- as.data.frame(var$contrib)
contribution$variables <- variables_names

write_delim(contribution, "C:/Users/Elia/Desktop/genetica/coordenadas y variables ecoclimaticas/CAPFITOGEN3/analisis/results/variables_contribution.txt", delim = "\t")

fviz_pca_var(pca_variables, col.var = "contrib",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
#BIPLOT CON INDIVIDUOS Y VARIABLES
fviz_pca_biplot(pca_variables)






###PART 3 - PHENO FOR TASSEL
#Preparar variables ecoclimaticas como fenotipo para TASSEL
#Exportar tabla solo con variables ecoclimaticas y ajustar formato para lanzar el tassel
# !!! !!! CUIDADO !!! !!! se borran los archivos que se habian generado aqui previamente con el nombre con el que se habian generado; si se quieren generar otros con datos nuevos, cambiar el nombre de los archivos que se crean en las lineas mas abajo; si no, esos datos nuevos se van a almacenar en los archivos preexistentes 
#cargar la tabla de variables
tabla_variables <- read.delim("C:/Users/Elia/Desktop/genetica/coordenadas y variables ecoclimaticas/CAPFITOGEN3/analisis/TD/results/EcogeographicCharacterization_Spain/TablaVarEcogeograficasspain.txt")
setwd(paste("C:/Users/Elia/Desktop/genetica/TASSEL/analisis_ecococlimaticas/TD"))
unlink("tabla_variables.txt")
unlink("pheno_ecoclimaticas.txt")
#Seleccionar las 75 variables ecoclimaticas para los analisis y para lanzar el TASSEL
tabla_tassel <- select(tabla_variables, -DECLATITUDE, -DECLONGITUDE, -alt)
names(tabla_tassel)[1] = "Taxa"
write_delim(tabla_tassel, "tabla_variables.txt", delim = "\t")
tabla_tassel <- read.delim("tabla_variables.txt", header = FALSE)
names(tabla_tassel) <- c("taxa", rep("data", 74))
#Poner directorio en el que queremos exportar la tabla para usarla en tassel
write(paste("<Phenotype>"), file="pheno_ecoclimaticas.txt", append=TRUE)
write.table(tabla_tassel, file="pheno_ecoclimaticas.txt", append=TRUE, sep = "\t", row.names = FALSE, quote=FALSE)
#eliminar la tabla de variables que es innecesaria aqui, ya la tenemos de cuando hemos ejecutado capfitogen
unlink("tabla_variables.txt")


#matriz Q de trigo duro - arreglar para meter en TASSEL
meanQ<- read.csv("C:/Users/Elia/Desktop/genetica/TASSEL/analisis_ecococlimaticas/TD/7meanQ.csv")
write_delim(meanQ, "7meanQ_bien.txt", delim = "\t")
# a este archivo hay que quitarle la primera fila antes de meterlo en TASSEL -> despues de hacer eso lo he guardado como 7meanQ_bien
